name: Build and Push Docker Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/kiln

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Include large-vocabularies submodule for Docker build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            VALIDATOR_VERSION=${{ env.VALIDATOR_VERSION }}

      - name: Deploy to Kubernetes (if main branch)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Deployment would happen here"
          echo "kubectl apply -f k8s/kiln.yaml"
          echo "kubectl -n kiln rollout restart deployment/kiln"
        # Note: Actual deployment requires setting up kubectl with cluster credentials
        # This can be done with:
        # - uses: azure/setup-kubectl@v3
        # - uses: azure/k8s-set-context@v3
        #   with:
        #     method: kubeconfig
        #     kubeconfig: ${{ secrets.KUBE_CONFIG }}